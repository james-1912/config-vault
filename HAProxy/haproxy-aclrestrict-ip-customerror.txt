global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/error.html 
	errorfile 403 /etc/haproxy/errors/error.html 
	errorfile 408 /etc/haproxy/errors/error.html 
	errorfile 500 /etc/haproxy/errors/error.html 
	errorfile 502 /etc/haproxy/errors/error.html 
	errorfile 503 /etc/haproxy/errors/error.html 
	errorfile 504 /etc/haproxy/errors/error.html 
frontend webfront
	bind 0.0.0.0:80
	mode http
	acl network_allowed src <IP or C.I.D.R> 
	acl fqdn_block hdr(Host) -i <URL 1>
	acl fqdn_block_reseller hdr(Host) -i <URL 2>
	#use_backend webserver_failure if !network_allowed !fqdn_block 
	use_backend webserver_group if fqdn_block network_allowed
	use_backend webserver_failure_reseller if fqdn_block_reseller 
	default_backend webserver_failure
backend webserver_group
	mode http
	server s1 <webserver 1 with port>
backend webserver_failure
	mode http
	server s2 <webserver 2 with port>
backend webserver_failure_reseller
	mode http
	errorfile 503 /var/error.html