global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/error.html 
	errorfile 403 /etc/haproxy/errors/error.html 
	errorfile 408 /etc/haproxy/errors/error.html 
	errorfile 500 /etc/haproxy/errors/error.html 
	errorfile 502 /etc/haproxy/errors/error.html 
	errorfile 503 /etc/haproxy/errors/error.html 
	errorfile 504 /etc/haproxy/errors/error.html 
#HTTP Front
frontend webfront
        bind 0.0.0.0:80
        mode http
        reqadd X-Forwarded-Proto:\ http
#ACL Segment
        acl network_allowed src <IP range or IP to allowed>
        acl fqdn_block hdr(Host) -i <subdomain 1> <subdomain 2>
        acl fqdn_block_reseller hdr(Host) -i <reseller sub domain 1> <reseller subdomain 2>
#Traffic Decide 
        use_backend webserver_group if fqdn_block network_allowed
        use_backend webserver_failure if fqdn_block || fqdn_block_reseller
        default_backend webserver_failure_general
#HTTPS Front
frontend webfront_https
        bind 0.0.0.0:443 ssl crt /etc/haproxy/certs
        Reqadd X-Forwarded-Proto:\ https
#ACL Segment
        acl network_allowed src <IP range or IP to allowed>
        acl fqdn_block ssl_fc_sni <subdomain 1> <subdomain 2>
        acl fqdn_block_reseller ssl_fc_sni <reseller sub domain 1> <reseller subdomain 2>
#Traffic Decide 
        use_backend webserver_group if fqdn_block network_allowed
        use_backend webserver_failure if fqdn_block || fqdn_block_reseller
        default_backend webserver_failure_general
#Backend Server

###Live Stack
backend webserver_group
        mode http
        redirect scheme https code 301 if !{ ssl_fc }
        server <name> <IP>


###Static Web Server Nginx
backend webserver_failure
        mode http
        redirect scheme https code 301 if !{ ssl_fc }
        server <name> <IP>
###Static by Haproxy
backend webserver_failure_general
        mode http
        errorfile 503 /var/error.html