---
- name: for all host
  hosts: all
  vars_files: ../secrets/sensitive-data.yml
  become: yes
  tasks:
  - name: create ansibleadmin user
    ansible.builtin.user:
      name: ansibleadmin
      password: "{{ ansibleadminpass }}"
      shell: /bin/bash
      groups: sudo
      append: yes
  - name: send keyover authorized_keys
    ansible.posix.authorized_key:
      user: ansibleadmin
      state: present
      key: "{{ lookup('file', '/root/.ssh/id_ed25519.pub') }}"
  - name: remove password authentication and permit root login
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '{{item.From}}' 
      line:  '{{item.To}}'
      state: present
    loop: 
      - { From: '^PasswordAuthentication', To: 'PasswordAuthentication no'}
      - { From: '^PermitRootLogin', To: 'PermitRootLogin no'}
  - name: restart sshd process
    systemd:
      name: sshd.service
      state: restarted
  - name: check sshd service
    systemd:
      name: sshd
#   - name: populate sshd process status
#     service_facts:
#   - name: check sshd process status
#   - debug:
#       var: ansible_facts.services["sshd.service"]
  - name: install common software
    apt:
      name: "{{item}}"
      state: present
      update_cache: yes
    loop:
      - jq
      - byobu
      - iftop
      - net-tools
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
   
- name: for dockerhost only
  hosts: dockerhost
  become: yes
  tasks:
  - name: change hostname dockerhost1
    ansible.builtin.hostname:
      name: dockerhost1
  - name: add GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: add docker repository to apt
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present
  - name: install docker related software
    apt:
      name: "{{item}}"
      state: present
      update_cache: yes
    loop:
      - docker-ce=5:19.03.15~3-0~ubuntu-focal 
      - containerd.io

- name: for webserver host only
  hosts: web
  become: yes
  tasks:
  - name: change hostname web1
    ansible.builtin.hostname:
      name: web1
  - name: install web server related software
    apt:
      name: nginx
      state: present
#   - name: populate nginx process status
#     service_facts:
#   - name: check nginx process status
#   - debug:
#       var: ansible_facts.services["nginx.service"]

- name: for database server only
  hosts: db
  become: yes
  tasks:
  - name: change hostname db1
    ansible.builtin.hostname:
      name: db1
  - name: install database server related software
    apt:
      name: mysql-server
      state: present
#   - name: populate mysql process status
#     service_facts:
#  - name: check mysql process status
#   - debug:
#       var: ansible_facts.services["mysql.service"]